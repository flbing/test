
mybatis.config-locations=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml

#spring.datasource.driverClassName = com.mysql.jdbc.Driver
#spring.datasource.url = jdbc:mysql://localhost:3306/user_apply?useUnicode=true&serverTimezone=UTC
#spring.datasource.username = root
#spring.datasource.password = 130213


server.port=8080

spring.application.name=apply_oms
server.servlet.context-path=/apply_oms
spring.main.allow-bean-definition-overriding=true
mybatis.configuration.map-underscore-to-camel-case=true
#分片配置 数据源的名字，从上到下要统一
spring.shardingsphere.datasource.names=applydata
spring.shardingsphere.datasource.applydata.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.applydata.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.applydata.url=jdbc:mysql://localhost:3306/user_apply?allowMultiQueries=true&serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=UTF-8&useSSL=true
spring.shardingsphere.datasource.applydata.username=root
spring.shardingsphere.datasource.applydata.password=130213

#配置数据节点applyData.trx_apply_info_1，applyData.trx_apply_info_2
spring.shardingsphere.sharding.tables.trx_apply_info.actual-data-nodes=applydata.trx_apply_info_$->{1..2}
#指定主键生成策略,trx_apply_info是以后写sql用的，全局主键
spring.shardingsphere.sharding.tables.trx_apply_info.key-generator.column=apply_id
spring.shardingsphere.sharding.tables.trx_apply_info.key-generator.type=SNOWFLAKE
###使用哪个子段进行分片，以及分片的策略
spring.shardingsphere.sharding.tables.trx_apply_info.table-strategy.inline.sharding-column=apply_id
spring.shardingsphere.sharding.tables.trx_apply_info.table-strategy.inline.algorithm-expression=trx_apply_info_$->{apply_id%2+1}
##sql日志输出
spring.shardingsphere.props.sql.show=true
logging.level.root=info
logging.level.org.springframework.web=info
logging.level.com.user.management=debug
logging.level.druid.sql=debug